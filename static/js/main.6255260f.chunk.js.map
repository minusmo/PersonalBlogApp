{"version":3,"sources":["photocard.js","article.js","footer.js","portforlio.js","navbar.js","Blogposts.js","App.js","serviceWorker.js","index.js"],"names":["photocard","class","className","src","href","style","cursor","React","Component","Article","props","color","imgsrc","alt","title","subtitle","children","Footer","portfolio","Navbar","e","target","document","getElementById","dataset","navbar","classList","toggle","role","aria-label","id","aria-expanded","data-target","onClick","this","burgerHandler","aria-hidden","to","BlogApp","path","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6255260f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./photocard.css\";\n\nclass photocard extends React.Component {\n  render() {\n    return (\n      <article class=\"media\">\n        <figure class=\"media-left\">\n          <p class=\"image is-128x128\">\n            <img className=\"is-rounded\" src=\"atyosemite.jpg\" />\n          </p>\n        </figure>\n        <div class=\"media-content\">\n          <div class=\"content\">\n            <p>\n              <strong>HoJoon EUM</strong> <small>bldolphin96@gmail.com</small>{\" \"}\n              <a href=\"https://negativemo.wordpress.com/\">\n                <button style={{ cursor: \"pointer\" }}>My Wordpress</button>{\" \"}\n              </a>\n              <a href=\"https://github.com/minusmo?tab=repositories\">\n                <button style={{ cursor: \"pointer\" }}>My Github Repo</button>{\" \"}\n              </a>\n              <br></br>\n              Hi I'm HoJoon Eum, junior web developer. I usually develop webapps\n              using Javascript. I work with React, Next.js, Html5, CSS3,\n              VanillaJS on Frontend deveolpment and Node.js, Express, mongodb,\n              mongoose on Backend. I love to work on frontend side, and have\n              passion to make web design more beautiful and useful.\n            </p>\n          </div>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default photocard;\n","import React from \"react\";\nimport \"./article.css\";\n\nconst Article = props => {\n  return (\n    <section class={`hero is-${props.color} is-fullheight is-light is-bold`}>\n      <div class=\"hero-body\">\n        <div class=\"container is-fluid has-background-info\">\n          <div className=\"tile is-ancestor\">\n            <div className=\"tile is-4 is-parent\">\n              <div className=\"tile is-child box has-background-warning\">\n                <img src={props.imgsrc} alt=\"\" className=\"thumbnail\" />\n              </div>\n            </div>\n            <div className=\"tile is-parent\">\n              <div className=\"tile is-child box has-background-warning\">\n                <h1 class=\"title\">{props.title}</h1>\n                <h2 class=\"subtitle\">{props.subtitle}</h2>\n                {props.children}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Article;\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer\">\n      <div class=\"content has-text-centered\">\n        <p>\n          <strong>Thank you for Visiting</strong>\n          <p>All articles and images are made by HoJoon Eum</p>\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import \"bulma/css/bulma.css\";\nimport React, { Component } from \"react\";\nimport Photocard from \"./photocard\";\nimport Article from \"./article\";\nimport Footer from \"./footer\";\nimport \"./portfolio.css\";\nimport \"./article.css\";\n\nclass portfolio extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const title1 = \"First Work\";\n    const subtitle1 = \"Ghibli Movies Showcase\";\n    const title2 = \"Second Work\";\n    const subtitle2 = \"Knier Tree-Structure rendering\";\n    const title3 = \"Third Work\";\n    const subtitle3 = \"Artists Page\";\n    return (\n      <div className=\"portContainer\">\n        <Photocard />\n        <Article\n          imgsrc={\"ghiblithumbnail.jpg\"}\n          color={\"white\"}\n          title={title1}\n          subtitle={subtitle1}\n        >\n          <div>\n            <p>\n              Direct Url:{\" \"}\n              <a href=\"https://minusmo.github.io/Ghibli-Movie-Showcase-/\">\n                https://minusmo.github.io/Ghibli-Movie-Showcase-/\n              </a>\n            </p>\n            <p>\n              Github Repo:{\" \"}\n              <a href=\"https://github.com/minusmo/Ghibli-Movie-Showcase-\">\n                https://github.com/minusmo/Ghibli-Movie-Showcase-\n              </a>\n            </p>\n            <h4>\n              <strong>Brief Introduction</strong>\n            </h4>\n            <p>\n              This is my first own project to show public. It's quite simple.\n              This is made with html5, css3, vanillaJS. I made all the html\n              elements dynamically that needs data from external API. Using\n              vanillaJS, create elements, and put the data I want in the\n              elements, and finally append it on the root element.\n            </p>\n          </div>\n        </Article>\n        <Article\n          imgsrc={\"knierproject.jpg\"}\n          color={\"white\"}\n          title={title2}\n          subtitle={subtitle2}\n        >\n          <div>\n            <p>\n              Github Repo:{\" \"}\n              <a href=\"https://github.com/minusmo/KnierTreeproject\">\n                https://github.com/minusmo/KnierTreeproject\n              </a>\n            </p>\n            <h4>\n              <strong>Brief Introduction</strong>\n            </h4>\n            <p>\n              This is my second webapp project. I worked with a team named\n              Knier. Our goal was to make a webapp which helps to render\n              tree-structured data from a user input. Once a user put code about\n              tree-structured algorithm in the code editor and submit it, client\n              send the data to server. The server gets the data and transform it\n              to json data. Finally send the json data to client and client\n              renders tree-structured shape based on the data.\n            </p>\n          </div>\n        </Article>\n        <Article\n          imgsrc={\"musicapp.jpg\"}\n          color={\"white\"}\n          title={title3}\n          subtitle={subtitle3}\n        >\n          <div>\n            <p>\n              Direct Url:{\" \"}\n              <a href=\"https://musicapp.now.sh/\">https://musicapp.now.sh/</a>\n            </p>\n            <p>\n              Github Repo:{\" \"}\n              <a href=\"https://github.com/minusmo/MusicApp\">\n                https://github.com/minusmo/MusicApp\n              </a>\n            </p>\n            <h4>\n              <strong>Brief Introduction</strong>\n            </h4>\n            <p>\n              This work is totally derived from my passion. I really love to\n              listen music. There are some korean artists whose songs I truely\n              love and appreciate. Therefore I decided to make a web page for\n              them so let many people know their songs live in countries without\n              Republic of Korea. I used Next.js, React for frontend side, and\n              express, mongodb for backend side. I deployed nextjs app via zeit\n              now, and get my own data with axios on frontend side. The api\n              endpoint is made myself, using mongodb atlas and json static file\n              and deployed the api server on heroku.\n            </p>\n          </div>\n        </Article>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default portfolio;\n","import \"bulma/css/bulma.css\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  burgerHandler(e) {\n    const burgerbutton = document.getElementById(\"burgerbutton\");\n    const target = burgerbutton.dataset.target;\n    const navbar = document.getElementById(target);\n    e.target.classList.toggle(\"is-active\");\n    navbar.classList.toggle(\"is-active\");\n  }\n  render() {\n    return (\n      <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div class=\"navbar-brand\">\n          <span id=\"logo\" className=\"navbar-item\">\n            <img id=\"logoimg\" src=\"logo_transparent.png\" />\n          </span>\n\n          <a\n            id=\"burgerbutton\"\n            role=\"button\"\n            class=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasic\"\n            onClick={this.burgerHandler}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasic\" class=\"navbar-menu\">\n          <div class=\"navbar-start\">\n            <span class=\"navbar-item is-disabled\">Mo's Blog</span>\n\n            {/* <a class=\"navbar-item\">Documentation</a> */}\n\n            <div class=\"navbar-item has-dropdown is-hoverable\">\n              {/* <a class=\"navbar-link\">More</a>\n\n              <div class=\"navbar-dropdown\">\n                <a class=\"navbar-item\">About</a>\n                <a class=\"navbar-item\">Jobs</a>\n                <a class=\"navbar-item\">Contact</a>\n                <hr class=\"navbar-divider\"></hr>\n                <a class=\"navbar-item\">Report an issue</a>\n              </div> */}\n            </div>\n          </div>\n\n          <div class=\"navbar-end\">\n            <div class=\"navbar-item\">\n              <div class=\"buttons\">\n                <Link to=\"/\">\n                  <span className=\"button is-info\">\n                    <strong>Portfolio</strong>\n                  </span>\n                </Link>\n                {/* <Link to=\"/blogposts\"> */}\n                <a href=\"https://negativemo.wordpress.com/\">\n                  <span className=\"button is-danger\">\n                    <strong>Blogposts</strong>\n                  </span>\n                </a>\n                {/* </Link> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./blogposts.css\";\nimport \"bulma/css/bulma.css\";\nclass Blogposts extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"tile is-ancestor has-background-info\">\n        <div className=\"tile is-3 is-parent is-vertical has-background-warning\">\n          <div className=\"tile is-child\">index</div>\n        </div>\n        <div className=\"tile is-parent is-vertical\">\n          <div className=\"tile is-child\">space</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blogposts;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport MyPortfolio from \"./portforlio\";\nimport Blogposts from \"./Blogposts\";\nimport Navbar from \"./navbar\";\nimport \"./App.css\";\n\nclass BlogApp extends Component {\n  render() {\n    return (\n      // <Router>\n      //   {/* <nav>\n      //     <Link to=\"/\">MyPortfolio</Link>\n      //     <Link to=\"/blogposts\">blogposts</Link>\n      //   </nav> */}\n      //   <Navbar />\n      //   <Switch>\n      //     <Route exact path=\"/\">\n      //       <MyPortfolio />\n      //     </Route>\n      //     {/* <Route exact path=\"/blogposts\">\n      //       <Blogposts />\n      //     </Route> */}\n      //   </Switch>\n      // </Router>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\">\n            <MyPortfolio />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default BlogApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}